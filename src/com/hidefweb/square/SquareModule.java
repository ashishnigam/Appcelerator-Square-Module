/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package com.hidefweb.square;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollInvocation;
import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;

import org.appcelerator.titanium.TiActivity;
import org.appcelerator.titanium.TiC;
import org.appcelerator.titanium.TiContext;
import org.appcelerator.titanium.kroll.KrollCallback;
import org.appcelerator.titanium.proxy.IntentProxy;
import org.appcelerator.titanium.util.Log;
import org.appcelerator.titanium.util.TiActivityResultHandler;
import org.appcelerator.titanium.util.TiActivitySupport;
import org.appcelerator.titanium.util.TiConfig;
import org.appcelerator.titanium.util.TiActivitySupportHelper;

import android.app.Activity;
import android.content.Intent;

import com.squareup.android.Bill;
import com.squareup.android.Currency;
import com.squareup.android.LineItem;
import com.squareup.android.Square;

@Kroll.module(name="Square", id="com.hidefweb.square")
public class SquareModule extends KrollModule
	implements TiActivityResultHandler
{

	// Standard Debugging variables
	private static final String LCAT = "SquareModule";
	private static final boolean DBG = TiConfig.LOGD;
	
	private static Square ourSquare = null;
	
	protected KrollCallback resultCallback;

	// You can define constants with @Kroll.constant, for example:
	// @Kroll.constant public static final String EXTERNAL_NAME = value;
	
	public SquareModule(TiContext tiContext) {
		super(tiContext);
		
		ourSquare = new Square(tiContext.getActivity());
		
		
	}

	// Methods
	@Kroll.method
	public boolean checkInstalled() {
		Log.i(LCAT, "checkInstalled called");
		
		if (ourSquare.installationStatus()
		        != Square.InstallationStatus.AVAILABLE) {
			return false;
		}
		return true;
	}
	
	@Kroll.method
	public void runInstall() {
		Log.i(LCAT, "runInstall called");
		
		ourSquare.requestInstallation();
		
		return;
	}
	
	@Kroll.method
	public void runPayment(KrollInvocation invocation, int price, String description, KrollCallback handler) {
		Log.i(LCAT, "runPayment called");
		
		// Register the passed in function as a handler on the onResult stack
		
		/* TODO Support code for trying to set up the result of the Square call. We can't do this now.
		this.resultCallback = handler;
		Activity activity = invocation.getTiContext().getActivity();
		TiActivitySupportHelper support = new TiActivitySupportHelper(activity);
		int code = support.getUniqueResultCode();
		support.registerResultHandler(code, this);
		*/
		
		LineItem advice = new LineItem.Builder()
        	.price(price, Currency.USD)
        	.description(description)
        	.build();
		
		ourSquare.squareUp(Bill.containing(advice));
	}
	
	@Override
	public void onResult(Activity activity, int requestCode, int resultCode, Intent data)
	{
		Log.i(LCAT, "onResult Called");
		if (resultCallback == null) return;
		KrollDict event = new KrollDict();
		event.put(TiC.EVENT_PROPERTY_REQUEST_CODE, requestCode);
		event.put(TiC.EVENT_PROPERTY_RESULT_CODE, resultCode);
		event.put(TiC.EVENT_PROPERTY_INTENT, new IntentProxy(getTiContext(), data));
		event.put(TiC.EVENT_PROPERTY_SOURCE, this);
		resultCallback.callAsync(event);
	}

	@Override
	public void onError(Activity activity, int requestCode, Exception e)
	{
		Log.i(LCAT, "onError Called");
		if (resultCallback == null) return;
		KrollDict event = new KrollDict();
		event.put(TiC.EVENT_PROPERTY_REQUEST_CODE, requestCode);
		event.put(TiC.EVENT_PROPERTY_ERROR, e.getMessage());
		event.put(TiC.EVENT_PROPERTY_SOURCE, this);
		resultCallback.callAsync(event);
	}

}
